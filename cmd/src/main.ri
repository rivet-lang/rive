// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import std/console;
import std/process;

import rivet;
import rivet/utils;

import ./tools;

var help := "Rivet is a tool for managing Rivet source code.

Usage: rivet [COMMAND] [OPTIONS]

Commands:
   new              Sets up a new Rivet project.
   init             Sets up a Rivet project within the current directory.
   build            Build a Rivet project.
   run              Create executable and run immediately.
   test             Create and run a test build.
   check            Scans, parses, and checks the files without compiling.
   fmt              Format the Rivet code provided.
   version          Print version number and exit.
   help             Print this help and exit.

General Options:
   -h, --help       Print command-specific usage.
";

func main() {
    if process.args.len == 1 {
        console.ewriteln(help);
        utils.error("expected command argument");
    }
    cmd := process.args[1];
    match cmd {
        "build", "run", "test", "check" -> {
            // These commands are handled directly by the compiler.
            is_test := cmd == "test";
            is_check := cmd == "check";
            rivet.Builder.new(process.args[2..], is_test, is_test || cmd == "run", is_check)!;
        },
        "new", "init" -> tools.cmd_new(process.args[2..], cmd == "init")!,
        "fmt" -> tools.cmd_fmt(process.args[2..])!,
        "version" -> {
            console.ewriteln(utils.full_version());
            process.exit(0);
        },
        "-h", "--help", "help" -> {
            console.ewriteln(help);
            process.exit(0);
        },
        else -> utils.error("unknown command `{}`", cmd)
    }
}
