// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import std/fs;
import std/semver;
import std/console;
import std/strings;

import rivet/utils;
import { Project } from rivet/build;

func generate_project_ri(project: Project) ! {
    mut sb := strings.Builder.new();
    sb.writeln("// Auto-generated by the Rivet CLI's `new` command.

import { Project, Version } from rivet/build;

var project = Project(");
    sb.write_fmt("    name: \"{}\"", project.name);
    if !project.description.is_empty() {
        sb.writeln(",");
        sb.write_fmt("    description: \"{}\"", project.description);
    }
    sb.writeln(",");
    sb.write_fmt("    version: Version.from_string(\"{}\")", project.version);
    if !project.license.is_empty() {
        sb.writeln(",");
        sb.write_fmt("    license: \"{}\"", project.license);
    }
    if !project.authors.is_empty() {
        sb.writeln(",");
        sb.write_string("    authors: [");
        for i, author in project.authors {
            sb.write_string("\"");
            sb.write_string(author);
            sb.write_string("\"");
            if i < project.authors.len - 1 {
                sb.write_string(", ");
            }
        }
        sb.write_string("]");
    }
    if !project.repository_url.is_empty() {
        sb.writeln(",");
        sb.write_fmt("    repository_url: \"{}\"", project.repository_url);
    }
    sb.writeln("\n);\n");
    fs.write_file("project.ri", sb.to_string())!;
}

public func new() ! {
    project := Project();
    if name := console.readln("> Name: ") {
        project.name = name;
    } else {
        utils.error("project name cannot be empty");
    }
    if description := console.readln("> Description (optional): ") {
        project.description = description;
    }
    if version := console.readln("> Version (default: 0.1.0): ") {
        project.version = semver.Version.from_string(version) catch |err| {
            utils.error(err.to_string());
        };
    } else {
        project.version = semver.Version.build(0, 1, 0);
    }
    if license := console.readln("> License (optional): ") {
        project.license = license;
    }
    if authors := console.readln("> Authors (optional): ") {
        project.authors = authors.split(",");
    }
    if repo_url := console.readln("> Repository URL (optional): ") {
        project.repository_url = repo_url;
    }
    generate_project_ri(project)!;
}
