// Copyright (C) 2023-2024 Jose Mendoza - All rights reserved. Use of this
// source code is governed by an MIT license that can be found in the LICENSE
// file.

$if _LINUX_ {
    pub const RAND_MAX := 0x7fffffff;
} else if _WINDOWS_ {
    pub const RAND_MAX := 0x7fff;
} else {
     // TODO: error cannot define RAND_MAX in this operating system, please report the issue
}

extern (C) {
    pub func rand() -> int32;
    pub func srand(seed: uint32);

    pub func atof(nptr: ?[&]uint8) -> float64;
    pub func atoi(nptr: ?[&]uint8) -> int32;
    pub func atol(nptr: ?[&]uint8) -> int64;
    pub func atoll(nptr: ?[&]uint8) -> int64;

    pub func strtod(nptr: [&]uint8, endptr: ?[&]uint8, base: int32) -> float64;
    pub func strtof(nptr: [&]uint8, endptr: ?[&]uint8, base: int32) -> float32;
    pub func strtol(nptr: [&]uint8, endptr: ?[&]uint8, base: int32) -> int64;
    pub func strtoll(nptr: [&]uint8, endptr: ?[&]uint8, base: int32) -> int64;
    pub func strtoul(nptr: [&]uint8, endptr: ?[&]uint8, base: int32) -> uint64;
    pub func strtoull(nptr: [&]uint8, endptr: ?[&]uint8, base: int32) -> uint64;

    pub func malloc(size: uint) -> ?rawptr;
    pub func calloc(nobj: uint, size: uint) -> ?rawptr;
    pub func realloc(p: ?rawptr, size: uint) -> ?rawptr;
    pub func free(p: rawptr);

    pub func getenv(name: [&]uint8) -> ?[&]mut uint8;
    pub func setenv(name: [&]uint8, value: [&]uint8, replace: bool) -> int32;
    pub func unsetenv(name: [&]uint8) -> int32;

    pub func exit(status: int32) -> never;
    pub func abort() -> never;
}
