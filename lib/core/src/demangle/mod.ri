// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

use pkg::utils::StaticBuffer;

pub fn demangle_symbol(name: string) string {
    if (!name.starts_with("_R")) {
        return name;
    }

    let idx: usize = 2;
    let buf = StaticBuffer();
    let res = string::with_capacity(name.len);
    while (idx < name.len) {
        let byte = unsafe { name.ptr[idx] };
        if (byte.is_digit()) {
            buf.push(byte);
            idx++;
            continue;
        }

        if (!res.is_empty()) {
            res.push_str("::");
        }

        for (_ in 0..as(usize, buf.as_u64())) {
            res.push(unsafe { name.ptr[idx++] });
        }

        buf.clear();

        if (!unsafe { name.ptr[idx] }.is_digit()) {
            break; // end
        }
    }
    return res;
}
