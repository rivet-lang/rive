// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

use pkg::traits::ToString;

/// Represents a generic error.
pub errtype Error;

#[used]
struct _Error {
    errtype_name: string;
    tag: u8; // max: 255
    msg_: string;
    code_: i64;

    #[used]
    fn new(errtype_name: string, tag: u8, msg: string, code: i64) Self {
        return Self(errtype_name, tag, msg, code);
    }

    #[used]
    fn print(self) {
        if (self.msg_.len_ == 0) {
            eprintln(self.errtype_name);
        } else {
            eprintln("{}: {}", self.errtype_name, self.msg_);
        }
        backtrace::print(2);
        process::exit(1);
    }

    fn to_string_(self) string {
        if (self.msg_.len_ == 0) {
            return self.errtype_name;
        }
        return "{}: {}".fmt(self.errtype_name, self.msg_);
    }
}

extend error {
    pub fn msg(self) string {
        return as(_Error, self).msg_;
    }

    pub fn code(self) i64 {
        return as(_Error, self).code_;
    }
}

extend error for ToString {
    pub fn to_string(self) string {
        return as(_Error, self).to_string_();
    }
}
