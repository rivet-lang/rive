// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import c;
import c/libc;

public alias ErrnoError = c.ErrnoError;
public alias last_errno_error = c.last_errno_error;

[inline]
func error_panic(err: Error) {
    console_eprintln("panic: {}", err.to_string());
    bt_print(2);
    process_exit(1);
}

[boxed]
public struct RuneFromU32Error : Error {
    msg: string;

    [inline]
    public func to_string(self) string {
        return self.msg;
    }
}

[boxed]
public struct InvalidArgumentError : Error {
    msg: string;

    [inline]
    public func to_string(self) string {
        return self.msg;
    }
}

[boxed]
public struct OutOfMemoryError : Error {
    msg: string;

    [inline]
    public func to_string(self) string {
        return self.msg;
    }
}

[boxed]
public struct ReadFailedError : Error {
    msg: string;

    [inline]
    public func to_string(self) string {
        return self.msg;
    }
}
