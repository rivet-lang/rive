// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

pub mod stdc;
pub mod backtrace;
pub mod console;
pub mod errors;
pub mod mem;
pub mod process;
pub mod sys;
pub mod traits;

mod demangle;
mod utils;

extern (Rivet) {
    pub let ARGS: [string];
}

fn segfault_handler(_: i32) void {
    Console::eprintln("panic: segmentation fault detected");
    backtrace::print(3);
    process::exit(1);
}

fn panic_if(cond: bool, msg: string) void {
    if cond {
        Console::eprintln("panic: {}", msg);
        backtrace::print(2);
        process::exit(1);
    }
}

fn assert(cond: bool, msg: string) void {
    if !cond {
        Console::eprintln("panic: assertion failed: {}", msg);
        backtrace::print(2);
        process::exit(1);
    }
}

pub fn errno() i32 {
    return unsafe {
#if _LINUX_
        stdc::__errno_location().*
#else
        stdc::_errno().*
#endif
    };
}

/// Returns error code representation in string.
pub fn strerr(code: i32 = errno()) string {
    unsafe {
        let s = stdc::strerror(code);
        return if s == none { "" } else { string::from_raw(s) };
    }
}
