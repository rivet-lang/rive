// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

pub struct FILE;

extern (C) {
    pub fn fopen(path: *u8, mode: *u8) *mut FILE;
    pub fn feof(stream: *FILE) i32;
    pub fn ferror(stream: *FILE) i32;
    pub fn fseek(stream: *mut FILE, offset: u64, whence: i32) i32;
    pub fn ftell(stream: *mut FILE) i64;
    pub fn fread(ptr: *mut void, size: usize, nitems: usize, stream: *mut FILE) usize;
    pub fn fputs(s: *u8, stream: *mut FILE) i32;
    pub fn fprintf(stream: *mut FILE, fmt: *u8, ...) i32;
    pub fn fwrite(ptr: *void, size: usize, nobj: usize, stream: *mut FILE) usize;
    pub fn fflush(stream: *mut FILE) i32;
    pub fn fgets(s: *mut u8, n: usize, stream: *mut FILE) i32;
    pub fn fclose(stream: *mut FILE) i32;
    pub fn fileno(stream: *FILE) i32;
    pub fn rewind(stream: *mut FILE);
}

extern (C) {
	pub fn popen(cmd: *u8, modes: *u8) *mut FILE;
	pub fn pclose(stream: *mut FILE) i32;
}

extern (C) {
    pub fn putchar(s: i32) i32;
    pub fn printf(fmt: *u8, ...) i32;
}
