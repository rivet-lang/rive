// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

struct EnumInfo {
    _rc_: usize;
    _id_: usize;
    obj: anyptr;
}

func enum_cast(ptr: anyptr, expected_id: usize) -> anyptr {
    enum_info := unsafe { @as(&EnumInfo, ptr) };
    if enum_info._id_ != expected_id {
        // TODO: replace indexes with names
        console_ewriteln(
            "panic: enum cast: cannot cast ID({}) to ID({})", enum_info._id_, expected_id
        );
        bt_print(2);
        process_exit(1);
    }
    return enum_info.obj;
}

func trait_cast(got_obj: anyptr, got_id: usize, expected_id: usize) -> anyptr {
    if got_id != expected_id {
        // TODO: replace indexes with names
        console_ewriteln(
            "panic: trait cast: cannot cast ID({}) to ID({})", got_id, expected_id
        );
        bt_print(2);
        process_exit(1);
    }
    return got_obj;
}
