// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

using pkg::stdc;

pub struct StaticBuffer {
    mut buf: [u8; 25];
    mut len: usize;

    pub fn push(&mut self, byte: u8) {
        if (self.len < self.buf.len) {
            self.buf[self.len++] = byte;
        } else {
            panic("StaticBuffer::push: cannot push byte (len: {})", self.len);
        }
    }

    pub fn clear(&mut self) {
        while (self.len > 0) {
            self.buf[self.len--] = 0;
        }
    }

    pub fn as_u64(&self) u64 {
        return unsafe { stdc::strtoul(&self.buf[0], none, 10) };
    }

    pub fn as_str(&self) str {
        return unsafe { str::from_raw_with_len(&self.buf[0], self.len) };
    }
}
