// Copyright (C) 2023-present Jose Mendoza - All rights reserved. Use of this
// source code is governed by an MIT license that can be found in the LICENSE
// file.

import ../token;

#[boxed]
pub struct ImportedSymbol {
    pub name: string;
    pub sym: Sym;
    pub pos: token.Pos;
    pub mut is_used: bool;
}

pub struct ImportedSymbols {
    pub mut syms: []+ImportedSymbol;

    #[inline]
    pub func add(mut self, name: string, sym: Sym, pos: token.Pos, is_used: bool := false) {
        self.syms.push(+ImportedSymbol(name, sym, pos, is_used));
    }

    pub func find(&self, name: string) -> ?+ImportedSymbol {
        for imported_sym in self.syms {
            if name == imported_sym.name {
                return imported_sym;
            }
        }
        return none;
    }

    #[inline]
    pub func exists(&self, name: string) -> bool {
        return self.find(name) != none;
    }
}
