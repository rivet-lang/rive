// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import ./mir;
import ../ast;

extend Codegen {
    func gen_expr(mut self, expr: ast.Expr) -> mir.Expr {
        return match expr is {
            .Paren as paren -> self.gen_expr(paren.expr),
            //.Ident -> {},
            .BoolLiteral as bool_lit -> .Const(
                .IntConst(bool_lit.value.to_int()), self.bool_t
            ),
            .IntegerLiteral as int_lit -> .Const(
                .IntConst(int_lit.value.to_int() catch @unreachable()),
                self.uint_t
            ),
            .FloatLiteral as float_lit -> .Const(
                .IntConst(float_lit.value.to_int() catch @unreachable()),
                self.uint_t
            ),
            else -> .Empty()
        };
    }
}
