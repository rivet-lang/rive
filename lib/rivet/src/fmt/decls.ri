// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import ../ast;

extend Formatter {
    func format_decls(mut self, decls: []ast.Decl) {
        for decl in decls {
            self.format_decl(decl);
        }
    }

    func format_decl(mut self, decl: ast.Decl) {
        match decl is {
            .Comment as comment -> self.format_comment(comment, same_line: true),
            .Func as func_decl -> self.format_func(func_decl),
            else -> {}
        }
    }

    func format_func(mut self, func_decl: ast.Decl.Func) {
        self.format_comments(func_decl.docs, same_line: true);
        self.write(func_decl.stringify());
        if func_decl.is_extern {
            self.writeln(";");
        } else {
            self.writeln(" {");
            //self.indent += 1;
            self.format_stmts(func_decl.stmts);
            //self.indent -= 1;
            self.writeln("}");
        }
    }
}
