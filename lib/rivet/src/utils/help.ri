// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

public var help = "Usage: rivet build [OPTIONS] INPUT
       rivet run   [OPTIONS] INPUT [-- [args]]
       rivet test  [OPTIONS] INPUT

The compiler can receive a file or a directory as input, examples:
   `rivet build my_file.ri` or `rivet build my_folder/`

Options:
   --mod-name <name>
      Specify the name of the module being built. By default: main.

   -r, --release
      Compile the executable in release mode, where most optimizations are enabled.
      Note that most Rivet warnings turn to errors, if you pass -r or --release, so
      you will have to fix them first.

   -o <filename>, --output <filename>
      Force Rivet to output the module in a specific location
      (relative to the current working directory if not absolute).
      By default: main.

   -b <backend>, --backend <backend>
      Specify the backend to use while building the module.

      Current list of supported backends:
        `c` (default): Rivet outputs C source code which is passed to a C compiler
        to be compiled.

   -bc <compiler>, --backend-compiler <compiler>
      Change the backend compiler Rivet invokes to the specified compiler.

      Officially supported/tested backend compilers include:
        C: `clang`, `gcc` and `mingw`.

   -d <flag>, --define <flag>
      Define the provided flag.

   -L <path>
      Add a directory to the library search path.

   -os <name>, --target-os <name>
      Change the target OS that Rivet tries to compile for. By default, the
      target OS is the host system.

      Current list of supported operating systems:
        `linux`

   -arch <arch>, --target-arch <arch>
      Change the target architecture that Rivet tries to compile for. By
      default, the target architecture is the host arch.

      Current list of supported architectures:
        `amd64`, `i386`

   -x32, -x64
      Whether 32-bit or 64-bit machine code will be generated.

   --check-syntax
      Only scan and parse the module, but then stop.

   --check
      Scans, parses, and checks the files without compiling the module.

   --emit-rir
      Emit Rivet Intermediate Representation to a file.

   --keep-c
      Don't remove the output C source file.

   -v, --verbose
      Print additional messages to the console.

   -h, --help
      Print this message.";
