// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

import "libc";

extern (Rivet) {
    pub let ARGS: [string];
}

extern (C) {
    fn _R12init_globalsZ();
    fn _R12drop_globalsZ();
    fn _R8set_argsZ(args: [string]);
}

extern (C) fn init_args(_argc: i32, _argv: **u8) [string] {
    let mut args: [string] = unsafe { Vec.new(size_of!(string), as(usize, _argc)) };
    for i in 0..as(usize, _argc) {
        args.push(unsafe { string.from_raw(_argv[i]) });
    }
    return args;
}

fn main(
    _argc: i32, _argv: **u8,
#if _TESTS_
    mut tr: TestRunner
#else
    pkg_main: fn()
#endif
) {
    unsafe {
        _ = libc.signal(11, segfault_handler);
        _R8set_argsZ(init_args(_argc, _argv));
        _R12init_globalsZ();
#if _TESTS_
        if tr.tests.len > 0 {
            tr.run();
            tr.print_summary_tests();
        }
#else
        pkg_main();
#endif
        _R12drop_globalsZ();
    }
}
