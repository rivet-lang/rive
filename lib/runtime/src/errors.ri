// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

import "c/libc";

pub import "c" { ErrnoError, last_errno_error };

fn error_panic(err: Error) {
    process_panic(err.to_string());
}

pub class Error : ToString {
    pub msg: string;

    pub fn to_string(self) string {
        let type_name = "Error";
        if self.msg == "" {
            return type_name;
        }
        return "{}: {}".fmt(type_name, self.msg);
    }
}

pub class InvalidArgumentError : Error { }

pub class OutOfMemoryError : Error { }

pub class RuneFromU32Error : Error { }
