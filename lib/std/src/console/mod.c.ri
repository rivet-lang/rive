// Copyright (C) 2023-present Jose Mendoza - All rights reserved. Use of this
// source code is governed by an MIT license that can be found in the LICENSE
// file.

import core;
import c/libc;

pub alias write := core.console_write;
pub alias writeln := core.console_writeln;
pub alias ewrite := core.console_ewrite;
pub alias ewriteln := core.console_ewriteln;
pub alias is_atty := core.console_is_atty;

/// Returns a one-line string from stdin, after printing a prompt. In
/// the event of error (end of input) or a empty string, returns `none`.
pub proc readln(prompt: string := "") -> ?string {
    if prompt.len > 0 {
        write(prompt);
    }
    _ = unsafe { libc.fflush(libc.stdout) };
    max: uint := 0;
    buf: ?[&]uint8 := none;
    nr_chars := unsafe { libc.getline(&buf, &max, libc.stdin) };
    res := unsafe {
        string.from_raw_with_len(
            buf, if nr_chars < 0 { 0 } else { @as(uint, nr_chars) }
        ).trim_right("\r\n")
    };
    return if res.len > 0 {
        res
    } else {
        none
    };
}
