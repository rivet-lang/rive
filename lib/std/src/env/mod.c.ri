// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import core;
import c/libc;

/// User's home directory.
pub var homeDir := get(#if _LINUX_ "HOME" #else "USERPROFILE" #endif) ?? "";

/// Returns `true` if the environment variable exists.
#[inline]
pub func exists(name: string) -> bool {
    return get(name) != none;
}

/// Returns the value of the environment variable named by the key.
#[inline]
pub func get(name: string) -> ?string {
    return unsafe {
        if s := libc.getenv(name.ptr) {
            string.from_raw(s)
        } else {
            none
        }
    };
}

/// Sets the value of an environment variable with `name` to `value`.
pub func set(name: string, value: string, overwrite: bool := true) -> ! {
    if unsafe { libc.setenv(name.ptr, value.ptr, overwrite) == -1 } {
        throw core.last_errno_error();
    }
}

/// Removes an environment variable with `name`.
pub func remove(name: string) -> ! {
    if unsafe { libc.unsetenv(name.ptr) } == -1 {
        throw core.last_errno_error();
    }
}
