// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

use core::stdc;

/// User's home directory.
pub let HOME_DIR: string = $if (_LINUX_) get("HOME") $else get("USERPROFILE");

/// Returns `true` if the environment variable exists.
pub func exists(name: string) bool {
	return unsafe { stdc::getenv(name.as_ptr()) != none };
}

/// Returns the value of the environment variable named by the key.
pub func get(name: string) string {
	unsafe {
		let s = stdc::getenv(name.as_ptr());
		return if (s == none) "" else string::from_raw(s);
	}
}

/// Sets the value of an environment variable with `name` to `value`.
pub func set(name: string, value: string, overwrite: bool = true) ! {
	if (unsafe { stdc::setenv(name.as_ptr(), value.as_ptr(), overwrite) == -1 }) {
		raise Error("env::set: {}".fmt(core::strerr()));
	}
}

/// Removes an environment variable with `name`.
pub func remove(name: string) ! {
	if (unsafe { stdc::unsetenv(name.as_ptr()) } == -1) {
		raise Error("env::remove: {}".fmt(core::strerr()));
	}
}
