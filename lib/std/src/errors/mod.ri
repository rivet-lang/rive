// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import c;
import core;

import ../traits;

public alias ErrnoError = c.ErrnoError;
public alias OutOfMemoryError = core.OutOfMemoryError;

@[boxed]
public struct InvalidSyntaxError < Error {
    msg: string;

    public func to_string(self) -> string {
        return self.msg;
    }
}

@[boxed]
public struct InvalidBaseError < Error {
    msg: string;

    public func to_string(self) -> string {
        return self.msg;
    }
}

@[boxed]
public struct InvalidBitSizeError < Error {
    msg: string;

    public func to_string(self) -> string {
        return self.msg;
    }
}

@[boxed]
public struct ValueOutOfRangeError < Error {
    msg: string;

    public func to_string(self) -> string {
        return self.msg;
    }
}

@[boxed]
public struct GenericError < Error {
    msg: string;

    public func to_string(self) -> string {
        return self.msg;
    }
}

/// Returns a generic error.
public func new(msg: string, args: ...traits.Stringable) -> Error {
    return GenericError(msg.fmt(args));
}
