// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

pub const E: f64 = 2.71828182845904523536028747135266249775724709369995957496696763;
pub const PI: f64 = 3.14159265358979323846264338327950288419716939937510582097494459;
pub const PI_2: f64 = PI / 2.0;
pub const PI_4: f64 = PI / 4.0;
pub const PHI: f64 = 1.61803398874989484820458683436563811772030917980576286213544862;
pub const TAU: f64 = 6.28318530717958647692528676655900576839433879875021164194988918;
pub const SQRT2: f64 = 1.41421356237309504880168872420969807856967187537694807317667974;
pub const SQRT_E: f64 = 1.64872127070012814684865078781416357165377610071014801157507931;
pub const SQRT_PI: f64 = 1.77245385090551602729816748334114518279754945612238712821380779;
pub const SQRT_TAU: f64 = 2.50662827463100050241576528481104525300698674060993831662992357;
pub const SQRT_PHI: f64 = 1.27201964951406896425242246173749149171560804184009624861664038;
pub const LN2: f64 = 0.693147180559945309417232121458176568075500134360255254120680009;
pub const LOG2_E: f64 = 1.0 / LN2;
pub const LN10: f64 = 2.30258509299404568401799145468436420760110148862877297603332790;
pub const LOG10_E: f64 = 1.0 / LN10;

/// Returns the number of digits in the number passed.
pub fn count_digits(number: i64) i32 {
	if number == 0 {
		return 1;
	}
	let mut n = number;
	let mut c = 0;
	while n != 0 {
		n = n / 10;
		c += 1;
	}
	return c;
}
