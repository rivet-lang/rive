// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import ../traits;
#if !(_X86_ or _AMD64_)
import ../process;
#endif

pub enum Arch as uint8 < traits.Stringable {
    X86,
    Amd64;

    #[inline]
    pub func from_string(arch: string) -> ?Arch {
        return match arch {
            "i386", "x86", "_X86_" -> .X86,
            "amd64", "_AMD64_" -> .Amd64,
            else -> none
        };
    }

    pub func to_string(&self) -> string {
        return match self.* {
            .X86 -> "x86",
            .Amd64 -> "amd64"
        };
    }
}

/// Returns the current architecture.
#[inline]
pub func arch() -> Arch {
#if _X86_
    return .X86;
#else_if _AMD64_
    return .Amd64;
#else
    process.panic("unknown host architecture");
#endif
}
