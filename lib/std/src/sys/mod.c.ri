// Copyright (C) 2023-present Jose Mendoza - All rights reserved. Use of this 
// source code is governed by an MIT license that can be found in the LICENSE 
// file.

import c/libc;

#if !_LINUX_
import ../process;
#endif

/// Returns the number of virtual CPU cores found on the system.
#[inline]
pub func nr_cpus() -> int32 {
#if _LINUX_
    return unsafe { libc.get_nprocs() };
#else
    process.panic("`nr_cpus` only works on linux (for now)");
#endif
}

/// Returns true if the current executable is running on a 32-bit system.
#[inline]
pub func is_32bit() -> bool {
    return @size_of(rawptr) == 4;
}

/// Returns true if the current executable is running on a 64-bit system.
#[inline]
pub func is_64bit() -> bool {
    return @size_of(rawptr) == 8;
}

/// Returns true if the current executable is running on a little-endian system.
#[inline]
pub func is_little_endian() -> bool {
    return unsafe { @as(int32, @as(&int8, &1).*) } == 1;
}

/// Returns true if the current executable is running on a big-endian system.
#[inline]
pub func is_big_endian() -> bool {
    return unsafe { @as(int32, @as(&int8, &1).*) } == 0;
}
