// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

<<<<<<< HEAD:lib/std/src/sys/os.ri
import "../process";
=======
use pkg::process::panic;
>>>>>>> fd5cbb707991f17d1cc05e277c0ef9c401dd652c:lib/core/src/sys/os.ri

pub enum OS : u8 {
    Linux,
    Windows,
    Macos;

    pub fn from_string(name: string) ?OS {
        switch name {
            "linux" => return .Linux,
            "windows" => return .Windows,
            "macos" => return .Macos,
            else => return nil
        }
    }
}

/// Returns the current operating system.
pub fn os() OS {
#if _LINUX_
    return .Linux;
#elif _WINDOWS_
    return .Windows;
#else
<<<<<<< HEAD:lib/std/src/sys/os.ri
    process.panic("unknown host operating system");
=======
    panic("unknown host operating system");
>>>>>>> fd5cbb707991f17d1cc05e277c0ef9c401dd652c:lib/core/src/sys/os.ri
#endif
}
