// Copyright (C) 2023-present Jose Mendoza - All rights reserved. Use of this
// source code is governed by an MIT license that can be found in the LICENSE
// file.

import ../traits;
$if !(_X86_ || _AMD64_) {
    import ../process;
}

pub enum OS as uint8 < traits.Stringable {
    Linux,
    Windows,
    Macos;

    #[inline]
    pub func from_string(name: string) -> ?OS {
        return match name {
            "linux", "_LINUX_" -> .Linux,
            "windows", "_WINDOWS_" -> .Windows,
            "macos", "_MACOS_" -> .Macos,
            else -> none
        };
    }

    pub func to_string(&self) -> string {
        return match self.* {
            .Linux -> "linux",
            .Windows -> "windows",
            .Macos -> "macos"
        };
    }
}

/// Returns the current operating system.
#[inline]
pub func os() -> OS {
    $if _LINUX_ {
        return .Linux;
    } else if _WINDOWS_ {
        return .Windows;
    } else {
        process.panic("unknown host operating system");
    }
}
