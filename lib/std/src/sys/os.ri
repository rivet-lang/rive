// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import ../traits;
#if !(_X86_ or _AMD64_)
import ../process;
#endif

public enum OS as uint8 < traits.Stringable {
    Linux,
    Windows,
    Macos;

    #[inline]
    public func from_string(name: string) -> ?OS {
        return match name {
            "linux", "_LINUX_" => .Linux,
            "windows", "_WINDOWS_" => .Windows,
            "macos", "_MACOS_" => .Macos,
            else => none
        };
    }

    public func to_string(&self) -> string {
        return match self.* {
            .Linux => "linux",
            .Windows => "windows",
            .Macos => "macos"
        };
    }
}

/// Returns the current operating system.
#[inline]
public func os() -> OS {
#if _LINUX_
    return .Linux;
#else_if _WINDOWS_
    return .Windows;
#else
    process.panic("unknown host operating system");
#endif
}
