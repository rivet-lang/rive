import std/conv;

test "std.conv.string_to_int32()" {
    @assert(conv.string_to_int32("16")! == 16);
    @assert(conv.string_to_int32("+16")! == 16);
    @assert(conv.string_to_int32("-16")! == -16);

    // invalid strings
    @assert(if _ := conv.string_to_int32("") {
        false
    } else {
        true
    });
    @assert(if _ := conv.string_to_int32("str") {
        false
    } else {
        true
    });
    @assert(if _ := conv.string_to_int32("string_longer_than_10_chars") {
        false
    } else {
        true
    });
}

test "std.conv.parse_int()" {
    // different bases
    @assert(conv.parse_int("16", 16, 0)! == 0x16);
    @assert(conv.parse_int("16", 8, 0)! == 0o16);
    @assert(conv.parse_int("11", 2, 0)! == 3);

    // different bit sizes
    @assert(conv.parse_int("127", 10, 8)! == 127);
    @assert(conv.parse_int("32767", 10, 16)! == 32767);
    @assert(conv.parse_int("2147483647", 10, 32)! == 2147483647);
    @assert(conv.parse_int("9223372036854775807", 10, 64)! == 9223372036854775807);
    @assert(conv.parse_int("baobab", 36, 64)! == 123314438);

    // invalid bit sizes
    @assert(if _ := conv.parse_int("123", 10, -1) {
        false
    } else {
        true
    });
    @assert(if _ := conv.parse_int("123", 10, 65) {
        false
    } else {
        true
    });
}
