struct Optional {
    a: ?i32;
}

test "`nil` literal" {
    let x: ?i32 = nil;
    assert!(x == nil);
}

test "operator `??`" {
    let mut x: ?i32 = nil;
    assert!((x ?? 5) == 5);
    x = 1;
    assert!((x ?? 5) == 1);
}

test "operator `.?`" {
    let mut x: ?i32 = 5;
    assert!(x.? == 5);
}

test "guard expr with optionals" {
    let mut x: ?i32 = 100;
    if let y = x {
        assert!(y == 100);
    } else {
        assert!(false);
    }
}

test "optional field" {
    let opt = Optional();
    assert!(opt.a == nil);

    let opt2 = Optional(a: 5);
    assert!(opt2.a != nil);
    assert!(opt2.a.? == 5);
}
