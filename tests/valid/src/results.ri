struct MyError < Throwable {
    msg: string;

    public func to_string(&self) -> string {
        return self.msg;
    }
}

func result() -> ! {
    throw MyError("simple error");
}

func result2() -> ! {
    throw MyError("simple error (throwed: {}, idx: {})".fmt(true, 0));
}

func result3() -> !int32 {
    return 5;
}

static resultValue: int32 = result3()!;

test "propagate result in `static` declaration" {
    @assert(resultValue == 5);
}

test "catch result error" {
    result() catch |err| {
        @assert(err is MyError);
        @assert(err.to_string() == "simple error");
    };

    result2() catch |err2| {
        @assert(err2 is MyError);
        @assert(err2.to_string() == "simple error (throwed: true, idx: 0)");
    };
}
