test "`switch` expression" {
    @assert(switch 1 {
        1 => true,
        else => false
    });
}

test "`switch` expression as statement" {
    switch 1 {
        1 => @assert(true),
        else => @assert(false)
    }

    x := 1;
    switch x {
        1 => @assert(true),
        else => @assert(false)
    }
}

test "`switch` branch condition" {
    v := 1;
    x := 5;
    @assert(switch v {
        1 if x == 5 => true,
        else => false
    });
}

enum SwitchBase {
    SwitchSon: SwitchSon
}

struct SwitchSon {
    name: string;
}

test "`switch` branch variable" {
    ss := SwitchSon(name: "Rivet");
    sb := SwitchBase::SwitchSon(ss);
    @assert(switch sb is {
        .SwitchSon as sb_ss => sb_ss.name == "Rivet",
        else => false
    });
}

test "`switch` branch with range condition" {
    x := 5;
    @assert(switch x {
        1...10 => true,
        else => false
    });
    @assert(switch x {
        20...30 => false,
        else => true
    });
}
